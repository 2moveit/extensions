<!DOCTYPE HTML>
<html>
<head>
    <title>Chart container</title>
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <script src="jquery-1.7.2.min.js" />
    <script src="d3.v2.min.js" />
    <script src="underscore-min.js" />
    <script src="SF_Chart_Utils.js" />
    <style src="reset.css" />
    <style type="text/css">
        body
        {
            font:12px/1.5 Arial,'Liberation Sans',FreeSans,sans-serif;
            background-color #ced5db;
        }
            
        #container svg
        {
            shape-rendering: crispEdges;         
        }
        </style>
</head>
<body>
    <div id="container" style="width: 100%; min-height: 400px;">
    </div>
    <script type="text/javascript">

        var exceptionLine = null;

        function reDraw(rawCode, rawData) {
            var $container = $("#container");
            $container.html("");

            var $win = $(window);

            $container.width($win.width());
            $container.height($win.height());

            var width = $container.width();
            var height = $container.height();

            chart = d3.select('#container')
                .append('svg:svg').attr('width', width).attr('height', height);

            code = "(" + rawCode + ")";
            data = $.parseJSON(rawData);


            var func;
            var __baseLineNumber__;
            try {
                var getLabel = SF.Chart.Utils.getLabel;
                var getKey = SF.Chart.Utils.getKey;
                var getColor = SF.Chart.Utils.getColor;
                var getClickKeys = SF.Chart.Utils.getClickKeys;
                __baseLineNumber__ = new Error().lineNumber;
                func = eval(code);
            } catch (e) {
                showError(e, __baseLineNumber__, chart);
                return;
            }

            try {
                func(chart, data);
                //this.bindMouseClick($chartContainer);
            } catch (e) {
                showError(e, __baseLineNumber__, chart);
            }

            if (exceptionLine == null)
                exceptionLine = -1;
        }

        function showError(e, __baseLineNumber__, chart) {
            var message = e.toString();

            var regex = /(DrawChart.*@.*:(.*))|(DrawChart .*:(.*):.*\)\))|(DrawChart .*:(.*):.*\))/;
            var match;
            if (e.stack != undefined && (match = regex.exec(e.stack)) != null) {
                var lineNumber = parseInt(match[2] || match[4] || match[6]) - __baseLineNumber__;
                if (isNaN(lineNumber))
                    lineNumber = 1;
                exceptionLine = lineNumber;
                message = "Line " + lineNumber + ": " + message;
            } else {
                exceptionLine = 1;
            }

            chart.select(".sf-chart-error").remove();
            chart.append('svg:rect').attr('class', 'sf-chart-error').attr("y", (chart.attr("height") / 2) - 10).attr("fill", "#FBEFFB").attr("stroke", "#FAC0DB").attr("width", chart.attr("width") - 1).attr("height", 20);
            chart.append('svg:text').attr('class', 'sf-chart-error').attr("y", chart.attr("height") / 2).attr("fill", "red").attr("dy", 5).attr("dx", 4).text(message);
        }

       
    </script>
</body>
</html>
