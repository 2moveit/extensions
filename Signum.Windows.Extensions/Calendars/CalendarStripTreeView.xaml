<c:CalendarStrip
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:m="clr-namespace:Signum.Windows;assembly=Signum.Windows"
    xmlns:c="clr-namespace:Signum.Windows.Calendars"
    xmlns:m2="clr-namespace:Signum.Windows.Extensions"
    mc:Ignorable="d"
	x:Class="Signum.Windows.Calendars.CalendarStripTreeView"
	x:Name="me">

    <c:CalendarStrip.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <m:DesignTimeResourceDictionary Source="pack://application:,,,/Signum.Windows;Component/Resources.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="TreeViewItemFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,10 L10,0 z"/>

            <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Width" Value="20"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Background="Transparent" Padding="5,5,5,5">
                                <Path x:Name="ExpandPath" Fill="Transparent" Stroke="#FF989898" Data="{StaticResource TreeArrow}">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="135" CenterX="5" CenterY="5"/>
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                    <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="RenderTransform" TargetName="ExpandPath">
                                        <Setter.Value>
                                            <RotateTransform Angle="180" CenterX="5" CenterY="5"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                                    <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TreeViewItemStyleRight" TargetType="{x:Type TreeViewItem}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="IsExpanded" Value="{Binding Expanded, Mode=TwoWay}"/>
                <Setter Property="IsSelected" Value="{Binding Selected, Mode=TwoWay}"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}"/>
                <Setter Property="Padding" Value="1,0,0,0"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Border SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="PART_Header" ContentSource="Header"/>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Row="1"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="false">
                                    <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Effect" TargetName="PART_Header">
                                        <Setter.Value>
                                            <DropShadowEffect Color="#FF6090ff" BlurRadius="10" ShadowDepth="0"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <!--<Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                </Trigger>-->
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TreeViewItemStyleLeft" TargetType="{x:Type TreeViewItem}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}"/>
                <Setter Property="IsExpanded" Value="{Binding Expanded, Mode=TwoWay}"/>
                <Setter Property="IsSelected" Value="{Binding Selected, Mode=TwoWay}"/>
                <Setter Property="Padding" Value="1,0,0,0"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="25" Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Border SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Column="1">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="PART_Header" ContentSource="Header"/>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="false">
                                    <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </c:CalendarStrip.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Orientation="Horizontal">
            <TextBlock Text="Zoom:" VerticalAlignment="Center" FontWeight="Bold" TextDecorations="None" />
            <CheckBox x:Name="auto" Content="Automático" VerticalAlignment="Center" Margin="4" IsChecked="{Binding AutoDayWidth, ElementName=me}"/>
            <Slider x:Name="slider" Width="100" Minimum="-1" Value="{Binding DayWidth, ElementName=me, Converter={x:Static m2:Converters.Logarithmic100}}" Maximum="1" TickPlacement="BottomRight" 
                                    Margin="4" 
                                    IsEnabled="{Binding IsChecked, ElementName=auto, Converter={x:Static m:Converters.Not}}" />
            <TextBlock Text="Límites:" VerticalAlignment="Center" FontWeight="Bold" TextDecorations="None" Margin="10,4,4,4" />
            <Button x:Name="btRecalcular" Style="{StaticResource LinkButtonStyle}" Content="Recalcular Límites" 
                    Click="btRecalcular_Click"  VerticalAlignment="Center" />
        </StackPanel>


        <ScrollViewer x:Name="swTop" Grid.Column="1"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Disabled">
            <c:CalendarStripHeader x:Name="csHeader" Height="50" VerticalAlignment="Top" HorizontalAlignment="Left" Grid.Row="0"
                         Max="{Binding Max, ElementName=me}" 
                         Min="{Binding Min, ElementName=me}" 
                         DayWidth="{Binding DayWidth, ElementName=me}" />
        </ScrollViewer>
        <TreeView Name="treeLeft" 
                  Grid.Row="1"
                  ItemContainerStyle="{StaticResource TreeViewItemStyleLeft}"  
                  ItemTemplate="{Binding ItemTemplateLeft, ElementName=me}"
                  ItemsSource="{Binding ItemsSource, ElementName=me}"
                  HorizontalContentAlignment="Stretch"
                  ScrollViewer.HorizontalScrollBarVisibility="Auto"
                  ScrollViewer.VerticalScrollBarVisibility="Hidden"
                  ScrollViewer.ScrollChanged="treeLeft_ScrollChanged" 
                  
                  />

        <TreeView Name="treeRight" 
                  Grid.Row="1" Grid.Column="1"
                  ItemContainerStyle="{StaticResource TreeViewItemStyleRight}" 
                  ItemTemplate="{Binding ItemTemplateRight, ElementName=me}"
                  ItemsSource="{Binding ItemsSource, ElementName=me}"
                  ScrollViewer.HorizontalScrollBarVisibility="{Binding IsChecked, ElementName=auto, Converter= {x:Static m2:Converters.AutoScroll}}"   
                  ScrollViewer.VerticalScrollBarVisibility="Auto" 
                  ScrollViewer.ScrollChanged="treeRight_ScrollChanged">

            <TreeView.Template>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border SnapsToDevicePixels="true" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer Focusable="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" CanContentScroll="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <Grid>
                                <c:CalendarStripWallpaper VerticalAlignment="Stretch" HorizontalAlignment="Left"  
                                     Max="{Binding Max, ElementName=me}" 
                                     Min="{Binding Min, ElementName=me}" 
                                     DayWidth="{Binding DayWidth, ElementName=me}" />
                                <StackPanel IsItemsHost="True"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Top" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </TreeView.Template>
        </TreeView>
    </Grid>
</c:CalendarStrip>