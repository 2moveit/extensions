//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using Signum.Utilities;
    using Signum.Entities;
    using Signum.Web;
    using System.Collections;
    using System.Collections.Specialized;
    using System.ComponentModel.DataAnnotations;
    using System.Configuration;
    using System.Text;
    using System.Text.RegularExpressions;
    using System.Web.Caching;
    using System.Web.DynamicData;
    using System.Web.SessionState;
    using System.Web.Profile;
    using System.Web.UI.WebControls;
    using System.Web.UI.WebControls.WebParts;
    using System.Web.UI.HtmlControls;
    using System.Xml.Linq;
    using Signum.Utilities.ExpressionTrees;
    using Signum.Engine.Cache;
    using Signum.Web.Cache;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MvcRazorClassGenerator", "1.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Cache/Views/Statistics.cshtml")]
    public class _Page_Cache_Views_Statistics_cshtml : System.Web.Mvc.WebViewPage<List<CacheStatistics>>
    {


        public _Page_Cache_Views_Statistics_cshtml()
        {
        }
        protected System.Web.HttpApplication ApplicationInstance
        {
            get
            {
                return ((System.Web.HttpApplication)(Context.ApplicationInstance));
            }
        }
        public override void Execute()
        {




WriteLiteral("<h2>");


Write(ViewData[ViewDataKeys.Title]);

WriteLiteral("</h2>\r\n<div>\r\n    <a href=\"");


        Write(Url.Action((CacheController pc) => pc.Disable()));

WriteLiteral("\" class=\"sf-button\" style=\"");


                                                                                     Write(!CacheLogic.GloballyDisabled ? "" : "display:none");

WriteLiteral(";color:red\" id=\"sfCacheDisable\">\r\n        Disable </a>\r\n    <a href=\"");


        Write(Url.Action((CacheController pc) => pc.Enable()));

WriteLiteral("\" class=\"sf-button\"  style=\"");


                                                                                     Write(CacheLogic.GloballyDisabled ? "" : "display:none");

WriteLiteral("\" id=\"sfCacheEnable\">\r\n            Enable </a>\r\n    <a href=\"");


        Write(Url.Action((CacheController pc) => pc.Clean()));

WriteLiteral(@""" class=""sf-button"" id=""sfCacheClear"">
                Clean </a>
</div>
<table class=""sf-search-results sf-stats-table"">
    <thead>
        <tr>
            <th>
                Type
            </th>
            <th>
                CacheType
            </th>
            <th>
                Count
            </th>
        </tr>
    </thead>
    <tbody>
");


         foreach (var item in Model)
        {

WriteLiteral("            <tr>\r\n                <td>");


               Write(item.Type.Name);

WriteLiteral("\r\n                </td>\r\n                <td>");


               Write(item.CacheType.NiceToString());

WriteLiteral("\r\n                </td>\r\n                <td>");


               Write(item.Count);

WriteLiteral("\r\n                </td>\r\n            </tr>\r\n");


        }

WriteLiteral("    </tbody>\r\n</table>\r\n");


Write(Html.ScriptsJs("~/Cache/Scripts/SF_Cache.js"));

WriteLiteral("\r\n");


        }
    }
}
