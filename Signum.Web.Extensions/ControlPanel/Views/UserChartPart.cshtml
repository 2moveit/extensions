@using System.Configuration
@using Signum.Web.Properties
@using Signum.Entities.ControlPanel
@using Signum.Web.ControlPanel
@using Signum.Entities.DynamicQuery
@using Signum.Entities.Chart
@using Signum.Web.Chart
@using Signum.Engine.Chart
@using Signum.Engine.DynamicQuery
@model PanelPart
@Html.ScriptsJs("~/Chart/Scripts/SF_Chart.js",
                "~/Chart/Scripts/SF_Chart_Utils.js",
                "~/scripts/d3.v2.min.js",
                "~/scripts/underscore-min.js")
@Html.ScriptCss("~/Chart/Content/SF_Chart.css")
@{ 
    UserChartDN uc = ((UserChartPartDN)Model.Content).UserChart;
    ChartRequest request = uc.ToRequest();

    using (var crc = new TypeContext<ChartRequest>(request, "r{0}c{1}".Formato(Model.Row, Model.Column)))
    {
        ResultTable resultTable = ChartLogic.ExecuteChart(request);


    <div id="@crc.Compose("sfChartControl")" class="sf-search-control sf-chart-control" data-prefix="@crc.ControlID">
        <div style="display: none">
            @Html.HiddenRuntimeInfo(crc)
            @Html.Hidden(crc.Compose("sfOrders"), request.Orders.IsNullOrEmpty() ? "" :
                    (request.Orders.ToString(oo => (oo.OrderType == OrderType.Ascending ? "" : "-") + oo.Token.FullKey(), ";") + ";"))
            @{
        ViewData[ViewDataKeys.QueryDescription] = DynamicQueryManager.Current.QueryDescription(request.QueryName);
        ViewData[ViewDataKeys.FilterOptions] = request.Filters.Select(f => new FilterOption { Token = f.Token, Operation = f.Operation, Value = f.Value }).ToList();
            }
            @Html.Partial(Navigator.Manager.FilterBuilderView, crc)
            <div id="@crc.Compose("sfChartBuilderContainer")">
                @Html.Partial(ChartClient.ChartBuilderView, crc)
            </div>
            <script type="text/javascript">
                        $('#@crc.Compose("sfChartBuilderContainer")').chartBuilder($.extend({ prefix: '@crc.ControlID'}, @MvcHtmlString.Create(uc.ToJS())));
            </script>
        </div>
        <div id="@crc.Compose("sfChartContainer")">
            <div class="sf-chart-container" 
                    data-open-url="@(Url.Action<ChartController>(cc => cc.OpenSubgroup(crc.ControlID)))" 
                    data-fullscreen-url="@(Url.Action<ChartController>(cc => cc.FullScreen(crc.ControlID)))"
                    data-json="@Html.Json(ChartClient.DataJson(crc.Value, resultTable)).ToString()">
            </div>
        </div>
    </div>
    
        MvcHtmlString divSelector = MvcHtmlString.Create("#" + crc.Compose("sfChartContainer") + " > .sf-chart-container");
   
        <script type="text/javascript">
            (function () {
                var $myChart = SF.Chart.getFor('@crc.ControlID');
                $myChart.reDraw();

                $("#" + SF.compose("@crc.ControlID", "sfFullScreen")).on("mousedown", function (e) {
                    $myChart.fullScreen(e);
                });
            })();
        </script>
        
    }
}
