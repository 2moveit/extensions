#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Signum.Web.Extensions.Mailing.Views
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Signum.Entities;
    
    #line 1 "..\..\Mailing\Views\Newsletter.cshtml"
    using Signum.Entities.Mailing;
    
    #line default
    #line hidden
    
    #line 2 "..\..\Mailing\Views\Newsletter.cshtml"
    using Signum.Entities.Reflection;
    
    #line default
    #line hidden
    using Signum.Utilities;
    using Signum.Web;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "1.5.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Mailing/Views/Newsletter.cshtml")]
    public class Newsletter : System.Web.Mvc.WebViewPage<dynamic>
    {
        public Newsletter()
        {
        }
        public override void Execute()
        {



            
            #line 3 "..\..\Mailing\Views\Newsletter.cshtml"
Write(Html.ScriptCss("~/Mailing/Content/Mail.css"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");


            
            #line 4 "..\..\Mailing\Views\Newsletter.cshtml"
 using (var nc = Html.TypeContext<NewsletterDN>())
{  

            
            #line default
            #line hidden
WriteLiteral("    <div class=\"");


            
            #line 6 "..\..\Mailing\Views\Newsletter.cshtml"
            Write(nc.Value.IsNew ? "" : "sf-tabs");

            
            #line default
            #line hidden
WriteLiteral("\">\r\n        <fieldset id=\"emTabMain\">\r\n            <legend>Newsletter</legend>\r\n " +
"           ");


            
            #line 9 "..\..\Mailing\Views\Newsletter.cshtml"
       Write(Html.ValueLine(nc, n => n.Name));

            
            #line default
            #line hidden
WriteLiteral("\r\n           \r\n            ");


            
            #line 11 "..\..\Mailing\Views\Newsletter.cshtml"
       Write(Html.HiddenRuntimeInfo(nc, n => n.Query));

            
            #line default
            #line hidden
WriteLiteral("\r\n        \r\n            ");


            
            #line 13 "..\..\Mailing\Views\Newsletter.cshtml"
       Write(Html.ValueLine(nc, n => n.State, vl => vl.ReadOnly = true));

            
            #line default
            #line hidden
WriteLiteral("\r\n            ");


            
            #line 14 "..\..\Mailing\Views\Newsletter.cshtml"
       Write(Html.ValueLine(nc, n => n.Subject));

            
            #line default
            #line hidden
WriteLiteral("\r\n");


            
            #line 15 "..\..\Mailing\Views\Newsletter.cshtml"
             if (nc.Value.State == NewsletterState.Sent)
            {
                
            
            #line default
            #line hidden
            
            #line 17 "..\..\Mailing\Views\Newsletter.cshtml"
           Write(Html.Hidden("htmlBodyContent", nc.Value.HtmlBody));

            
            #line default
            #line hidden
            
            #line 17 "..\..\Mailing\Views\Newsletter.cshtml"
                                                                  

            
            #line default
            #line hidden
WriteLiteral(@"                <fieldset>
                    <legend>Message</legend>
                    <iframe id=""newsBodyContent"" name=""frameNewImage"" src=""about:blank"" class=""sf-email-htmlbody"" frameborder=""0"">
                    </iframe>
                </fieldset>
");


            
            #line 23 "..\..\Mailing\Views\Newsletter.cshtml"
            }
            else
            {

            
            #line default
            #line hidden
WriteLiteral("                <div id=\"newsEditContent\">\r\n                    ");


            
            #line 27 "..\..\Mailing\Views\Newsletter.cshtml"
               Write(Html.ValueLine(nc, n => n.HtmlBody, vl =>
                    {
                        vl.ValueLineType = ValueLineType.TextArea;
                        vl.ValueHtmlProps["cols"] = "30";
                        vl.ValueHtmlProps["rows"] = "6";
                        vl.ValueHtmlProps["class"] = "sf-email-htmlwrite";
                        vl.ReadOnly = nc.Value.State == NewsletterState.Sent;
                    }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    <br />\r\n                    <input type=\"button\" class=\"sf-" +
"button\" id=\"newsPreviewContentButton\" value=\"Preview content\" />\r\n              " +
"  </div>\r\n");



WriteLiteral(@"                <div id=""newsPreviewContent"">
                    <fieldset>
                        <legend>Message</legend>
                        <iframe id=""newsBodyContentPreview"" name=""frameNewImage"" src=""about:blank"" class=""sf-email-htmlbody""
                            frameborder=""0""></iframe>
                        <br />
                        <input type=""button"" class=""sf-button"" id=""newsEditContentButton"" value=""Edit content"" />
                    </fieldset>
                </div>
");


            
            #line 47 "..\..\Mailing\Views\Newsletter.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            ");


            
            #line 48 "..\..\Mailing\Views\Newsletter.cshtml"
       Write(Html.EntityCombo(nc, n => n.SMTPConfig));

            
            #line default
            #line hidden
WriteLiteral("\r\n            ");


            
            #line 49 "..\..\Mailing\Views\Newsletter.cshtml"
       Write(Html.ValueLine(nc, n => n.From));

            
            #line default
            #line hidden
WriteLiteral("\r\n            ");


            
            #line 50 "..\..\Mailing\Views\Newsletter.cshtml"
       Write(Html.ValueLine(nc, n => n.DisplayFrom));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </fieldset>\r\n");


            
            #line 52 "..\..\Mailing\Views\Newsletter.cshtml"
         if (!nc.Value.IsNew)
        {

            
            #line default
            #line hidden
WriteLiteral("            <fieldset id=\"emTabSend\">\r\n                <legend>Deliveries</legend" +
">\r\n                <fieldset>\r\n                    <legend>Email recipients</leg" +
"end>\r\n                    ");


            
            #line 58 "..\..\Mailing\Views\Newsletter.cshtml"
               Write(Html.SearchControl(new FindOptions(typeof(NewsletterDeliveryDN))
                    {
                        FilterOptions = { new FilterOption("Newsletter", nc.Value) { Frozen = true } },
                        SearchOnLoad = true,
                    }, new Context(nc, "ncSent")));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </fieldset>\r\n            </fieldset>\r\n");


            
            #line 65 "..\..\Mailing\Views\Newsletter.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </div>    \r\n");


            
            #line 67 "..\..\Mailing\Views\Newsletter.cshtml"
}

            
            #line default
            #line hidden

            
            #line 68 "..\..\Mailing\Views\Newsletter.cshtml"
Write(Html.ScriptsJs("~/Mailing/Scripts/SF_Mail.js"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");


        }
    }
}
#pragma warning restore 1591
