//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.544
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using Signum.Utilities;
    using Signum.Entities;
    using Signum.Web;
    using System.Collections;
    using System.Collections.Specialized;
    using System.ComponentModel.DataAnnotations;
    using System.Configuration;
    using System.Text;
    using System.Text.RegularExpressions;
    using System.Web.Caching;
    using System.Web.DynamicData;
    using System.Web.SessionState;
    using System.Web.Profile;
    using System.Web.UI.WebControls;
    using System.Web.UI.WebControls.WebParts;
    using System.Web.UI.HtmlControls;
    using System.Xml.Linq;
    using Signum.Entities.Mailing;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MvcRazorClassGenerator", "1.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Mailing/Views/EmailTemplate.cshtml")]
    public class _Page_Mailing_Views_EmailTemplate_cshtml : System.Web.Mvc.WebViewPage<dynamic>
    {


        public _Page_Mailing_Views_EmailTemplate_cshtml()
        {
        }
        protected System.Web.HttpApplication ApplicationInstance
        {
            get
            {
                return ((System.Web.HttpApplication)(Context.ApplicationInstance));
            }
        }
        public override void Execute()
        {


 using (var ec = Html.TypeContext<EmailTemplateDN>())
{
    
Write(Html.ValueLine(ec, e => e.Name));

                                    
    
Write(Html.ValueLine(ec, e => e.State, vl => vl.ReadOnly = true));

                                                               

WriteLiteral("    <fieldset>\r\n        <legend>Properties</legend>\r\n        ");


   Write(Html.EntityLine(ec, e => e.Query));

WriteLiteral("\r\n        ");


   Write(Html.ValueLine(ec, e => e.Recipient));

WriteLiteral("\r\n        ");


   Write(Html.EntityLine(ec, e => e.Model));

WriteLiteral("\r\n    </fieldset>\r\n");



WriteLiteral("    <fieldset>\r\n        <legend>Active</legend>\r\n        ");


   Write(Html.ValueLine(ec, e => e.Active, vl => vl.ReadOnly = true));

WriteLiteral("\r\n        ");


   Write(Html.ValueLine(ec, e => e.StartDate));

WriteLiteral("\r\n        ");


   Write(Html.ValueLine(ec, e => e.EndDate));

WriteLiteral("\r\n    </fieldset>\r\n");



WriteLiteral("    <fieldset>\r\n        <legend>From/Copies</legend>\r\n        ");


   Write(Html.ValueLine(ec, e => e.From));

WriteLiteral("\r\n        ");


   Write(Html.ValueLine(ec, e => e.DisplayFrom));

WriteLiteral("\r\n        ");


   Write(Html.ValueLine(ec, e => e.Bcc));

WriteLiteral("\r\n        ");


   Write(Html.ValueLine(ec, e => e.Cc));

WriteLiteral("\r\n    </fieldset>\r\n");


    
Write(Html.EntityLine(ec, e => e.SMTPConfiguration));

                                                  

WriteLiteral("    <fieldset>\r\n        <legend>Text</legend>\r\n        ");


   Write(Html.EntityLine(ec, e => e.MasterTemplate));

WriteLiteral("\r\n        ");


   Write(Html.ValueLine(ec, e => e.IsBodyHtml));

WriteLiteral("\r\n        ");


   Write(Html.ValueLine(ec, e => e.EditableMessage));

WriteLiteral("\r\n        <div class=\"sf-tabs\">\r\n");


             foreach (var message in ec.Value.Messages.OrderBy(m => m.CultureInfo))
            {

WriteLiteral("                <fieldset id=\"etTabMain\">\r\n                    <legend>");


                       Write(message.CultureInfo);

WriteLiteral("</legend>\r\n                    \r\n                </fieldset>\r\n");


            }

WriteLiteral("        </div>\r\n    </fieldset>\r\n");


    
Write(Html.EntityList(ec, e => e.Tokens));

                                       
    
Write(Html.EntityList(ec, e => e.Messages));

                                         
}


        }
    }
}
