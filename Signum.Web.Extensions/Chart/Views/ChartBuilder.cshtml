@using Signum.Web
@using Signum.Web.Extensions.Properties
@using Signum.Entities.DynamicQuery
@using Signum.Engine.DynamicQuery
@using System.Configuration
@using Signum.Entities.Reflection
@using Signum.Entities
@using Signum.Entities.Chart
@using Signum.Web.Chart
@using Signum.Utilities
@using Signum.Engine.Chart
@using (var chart = Html.TypeContext<IChartBase>())
{
    QueryDescription queryDescription = (QueryDescription)ViewData[ViewDataKeys.QueryDescription];
   
    
    <table id="@chart.Compose("sfChartBuilder")" class="sf-chart-builder" data-url="@(Url.Action<ChartController>(cc => cc.UpdateChartBuilder(chart.Parent.ControlID)))">
        <tr>
            <td class="ui-widget ui-widget-content ui-corner-all sf-chart-type">
                <div class="ui-widget-header">
                    @typeof(ChartScriptDN).NiceName()
                    @using (var csc = chart.SubContext(c => c.ChartScript))
                    {
                        @Html.Hidden(csc.Compose("sfRuntimeInfo"), csc.RuntimeInfo().ToString(), new { @class = "sf-chart-type-value" })
                    }
                    @Html.Hidden(chart.Compose("GroupResults"), chart.Value.GroupResults, new { @class = "sf-chart-group-results" })
                </div>
                @foreach (var group in ChartUtils.PackInGroups(ChartScriptLogic.Scripts.Value, 4))
                {   
                    foreach (var script in group)
                    { 
                    <div class="@ChartClient.ChartTypeImgClass(chart.Value, chart.Value.ChartScript, script)" 
                    data-related="@(new RuntimeInfo(script).ToString())"  title="@(script.ToString() + "\r\n" + script.ColumnsStructure)">
                        <img src=" @(script.Icon == null ? Url.Content("~/Chart/Images/unknown.png") :
                        Url.Action((Signum.Web.Files.FileController fc) => fc.Download(new RuntimeInfo(script.Icon).ToString())))" />
                    </div>
                    }
                    <div class="clearall">
                    </div>
                }
            </td>
            <td class="ui-widget ui-widget-content ui-corner-all sf-chart-tokens">
                <div class="ui-widget-header">@Resources.Chart_ChartSettings</div>
                <table>
                    <tr>
                        <th class="sf-chart-token-narrow">@Resources.Chart_Dimension
                        </th>
                        <th class="sf-chart-token-narrow">@Resources.Chart_Group
                        </th>
                        <th class="sf-chart-token-wide">
                            Token
                        </th>
                    </tr>
                    @foreach (var column in chart.TypeElementContext(a => a.Columns))
                    {
                        @Html.HiddenRuntimeInfo(column)
                        @Html.EmbeddedControl(column, c => c, ec => ec.ViewData[ViewDataKeys.QueryDescription] = queryDescription)
                    }
                </table>
                <textarea class="sf-chart-currentScript" style="display:none" data-url="@Navigator.NavigateRoute(chart.Value.ChartScript)">
                    @chart.Value.ChartScript.Script
                </textarea>
            </td>
        </tr>
    </table>
}