@using Signum.Entities.DynamicQuery
@using Signum.Entities.Reflection
@using Signum.Web.Properties
@using Signum.Engine
@using System.Web.Mvc
@using Signum.Entities
@using Signum.Web
@using Signum.Entities.Chart
@model TypeContext<ChartRequest>

@{ 
    ResultTable queryResult = (ResultTable)ViewData[ViewDataKeys.Results];
    bool viewable = (bool)ViewData[ViewDataKeys.View];
    var formatters = (Dictionary<int, Func<HtmlHelper, object, MvcHtmlString>>)ViewData[ViewDataKeys.Formatters];
}

@if (queryResult == null)
{ 
    @Resources.Signum_noResults
}
else
{
    <table id="@Model.Compose("tblResults")" class="sf-search-results">
        <thead class="ui-widget-header ui-corner-top">
            <tr>
                @if (!Model.Value.Chart.GroupResults && viewable)
                {
                    <th class="ui-state-default th-col-entity">
                    </th>
                }
                @if (queryResult.Columns.Any())
                {
                    foreach (ResultColumn col in queryResult.Columns)
                    {
                        //var order = findOptions.OrderOptions.FirstOrDefault(oo => oo.Token.FullKey() == col.Name);
                        //OrderType? orderType = null;
                        //if (order != null)
                        //{
                        //    orderType = order.OrderType;
                        //}
                        <th class="ui-state-default">
                            <input type="hidden" value="@col.Column.Name" />
                            @col.Column.DisplayName
                        </th>
                    }
                }
            </tr>
        </thead>
        <tbody class="ui-widget-content">
            @if (!queryResult.Rows.Any())
            {
                <tr>
                    <td colspan="@(queryResult.Columns.Count() + (viewable ? 1 : 0))">@Resources.Signum_noResults</td>
                </tr>
            }
            else
            {
                foreach (var row in queryResult.Rows)
                {
                    if (Model.Value.Chart.GroupResults)
                    {
                        <tr>
                            @foreach (var col in queryResult.Columns)
                            {
                                <td>
                                    @formatters[col.Index](Html, row[col])
                                </td>
                            }   
                        </tr>
                    }
                    else
                    {
                        Lite entityField = row.Entity;
                        <tr data-entity="@entityField.Key()">
                            @if (entityField != null && viewable)
                            {
                                <td>
                                    @QuerySettings.EntityFormatRules.Last(fr => fr.IsApplyable(entityField)).Formatter(Html, entityField)
                                </td>
                            }
                            @foreach (var col in queryResult.Columns)
                            {
                                <td>
                                    @formatters[col.Index](Html, row[col])
                                </td>
                            }
                        </tr>
                    }
                }
            }
        </tbody>
        <tfoot>
        </tfoot>
    </table>
}



