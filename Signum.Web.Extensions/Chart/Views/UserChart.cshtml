@using Signum.Web
@using Signum.Web.Extensions.Properties
@using Signum.Entities.DynamicQuery
@using Signum.Engine.DynamicQuery
@using System.Configuration
@using Signum.Entities.Reflection
@using Signum.Entities
@using Signum.Entities.Chart
@using Signum.Web.Chart
@using Signum.Engine.Basics
@Html.ScriptsJs("~/Chart/Scripts/SF_Chart.js")
@Html.ScriptCss("~/Chart/Content/SF_Chart.css")
<style type="text/css">
    .sf-chart-control .sf-repeater-element
    {
        padding: 2px 10px;
    }
    .sf-chart-control .sf-repeater-element legend
    {
        float: left;
        margin-right: 10px;
    }
</style>
<div class="sf-chart-control" 
    data-subtokens-url="@Url.Action("NewSubTokensCombo", "Chart")" 
    data-add-filter-url="@Url.Action("AddFilter", "Chart")" 
    data-prefix="@Model.ControlID">
    @using (var uc = Html.TypeContext<UserChartDN>())
    {
        
        object queryName = QueryLogic.ToQueryName(uc.Value.Query.Key);

        QueryDescription queryDescription = (QueryDescription)ViewData[ViewDataKeys.QueryDescription];
        if (queryDescription == null)
        {
            queryDescription = DynamicQueryManager.Current.QueryDescription(queryName);
            ViewData[ViewDataKeys.QueryDescription] = queryDescription;
        }
        
        @Html.Hidden("webQueryName", Navigator.ResolveWebQueryName(queryName))

        using (var query = uc.SubContext(tc => tc.Query))
        {
        @Html.HiddenRuntimeInfo(query)
        
        @Html.Hidden(query.Compose("Key"), query.Value.Key)
        @Html.Hidden(query.Compose("Name"), query.Value.Name)

        @Html.Field("Query", Navigator.IsFindable(queryName) ?
                new HtmlTag("a").Class("sf-value-line").Attr("href", Navigator.FindRoute(queryName)).InnerHtml(query.Value.Name.EncodeHtml()).ToHtml() :
                Html.Span("spanQuery", query.Value.Name, "sf-value-line"))

        <div class="clearall">
        </div>
        }
    
        @Html.EntityLine(uc, tc => tc.Related, el => el.Create = false)
        @Html.ValueLine(uc, tc => tc.DisplayName)

        @Html.EntityRepeater(uc, tc => tc.Filters, er => { er.PreserveViewData = true; er.PartialViewName = "~/Chart/Views/UserChartFilter.cshtml"; })

        @Html.EntityRepeater(uc, tc => tc.Orders, er => { er.PreserveViewData = true; er.PartialViewName = "~/Chart/Views/UserChartOrder.cshtml"; })

        <div id="@uc.Compose("sfChartBuilderContainer")">
            @Html.Partial(ChartClient.ChartBuilderView, uc.Value)
        </div>
        <script type="text/javascript">
                $('#@uc.Compose("sfChartBuilderContainer")').chartBuilder($.extend({ prefix: '@uc.ControlID' }, @MvcHtmlString.Create(uc.Value.ToJS())));
        </script>
        
    }
</div>
