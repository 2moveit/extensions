@using Signum.Entities.Chart
@using Signum.Web.Files
@using Signum.Engine
@using Signum.Web.Chart
@model TypeContext<ChartScriptDN>
@Html.ScriptCss(
    "~/Content/CodeMirror/codemirror.css",
    "~/Content/CodeMirror/dialog.css",
    "~/Content/CodeMirror/simple-hint.css")
@Html.ScriptsJs(
        "~/Scripts/CodeMirror/codemirror.js",
        "~/Scripts/CodeMirror/javascript.js",
        "~/Scripts/CodeMirror/formatting.js",
        "~/Scripts/CodeMirror/searchcursor.js",
        "~/Scripts/CodeMirror/show-hint.js",
        "~/Scripts/CodeMirror/javascript-hint.js",
        "~/Scripts/CodeMirror/match-highlighter.js",
        "~/Scripts/CodeMirror/search.js",
        "~/Scripts/CodeMirror/dialog.js",
        "~/Scripts/CodeMirror/fullscreen.js"
        )
    <style type="text/css">
      .CodeMirror {
        border: 1px solid #eee;
      }
      
      span.CodeMirror-matchhighlight 
      { 
          background: #efefef
      }
      .CodeMirror-focused span.CodeMirror-matchhighlight 
      { 
          background: #efe7ff !important 
      }
      
      .exceptionLine {background: #FFFF00 !important;}
      
     .CodeMirror-fullscreen {
          position: fixed;
          top: 0; left: 0; right: 0; bottom: 0;
          height: auto;
          z-index: 9;
        }
    </style>
    <pre style="color: Green">
//var chart = d3.select('#sfChartControl .sf-chart-container').append('svg:svg').attr('width', width).attr('height', height))
//var data = { 
//              "columns": { "c0": { "title":"Product", "token":"Product", "isGroupKey":true, ... }, 
                             "c1": { "title":"Count", "token":"Count", "isGroupKey":true, ...} 
                          },
//              "rows": [ { "c0": { "key": "Product;1", "toStr": "Apple", "color": null }, "c1": { "key": "140", "toStr": "140" } },
//                        { "c0": { "key": "Product;2", "toStr": "Orange", "color": null }, "c1": { "key": "179", "toStr": "179" } }, ...
//                      ]
//           }
// DrawChart(chart, data);
// 
// Visit: http://d3js.org/
// Other functions defined in: \Chart\Scripts\ChartUtils.js
// use 'debugger' keyword or just throw JSON.stringify(myVariable)
// All yours!...
 </pre>
    @Html.ValueLine(Model, c => c.Script, vl => { vl.ValueLineType = ValueLineType.TextArea; vl.FormGroupStyle = FormGroupStyle.None; })
 
    <script>
        require(["@ChartClient.ModuleScript"], function (ChartScript) {
            ChartScript.init($("#@(Model.Compose("Script"))"));
        }); 
    </script>
