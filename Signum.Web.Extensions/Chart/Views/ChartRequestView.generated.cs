#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Signum.Web.Extensions.Chart.Views
{
    using System;
    using System.Collections.Generic;
    
    #line 5 "..\..\Chart\Views\ChartRequestView.cshtml"
    using System.Configuration;
    
    #line default
    #line hidden
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 4 "..\..\Chart\Views\ChartRequestView.cshtml"
    using Signum.Engine.DynamicQuery;
    
    #line default
    #line hidden
    
    #line 7 "..\..\Chart\Views\ChartRequestView.cshtml"
    using Signum.Entities;
    
    #line default
    #line hidden
    
    #line 8 "..\..\Chart\Views\ChartRequestView.cshtml"
    using Signum.Entities.Chart;
    
    #line default
    #line hidden
    
    #line 3 "..\..\Chart\Views\ChartRequestView.cshtml"
    using Signum.Entities.DynamicQuery;
    
    #line default
    #line hidden
    
    #line 6 "..\..\Chart\Views\ChartRequestView.cshtml"
    using Signum.Entities.Reflection;
    
    #line default
    #line hidden
    using Signum.Utilities;
    
    #line 1 "..\..\Chart\Views\ChartRequestView.cshtml"
    using Signum.Web;
    
    #line default
    #line hidden
    
    #line 9 "..\..\Chart\Views\ChartRequestView.cshtml"
    using Signum.Web.Chart;
    
    #line default
    #line hidden
    
    #line 2 "..\..\Chart\Views\ChartRequestView.cshtml"
        
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "1.5.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Chart/Views/ChartRequestView.cshtml")]
    public class ChartRequestView : System.Web.Mvc.WebViewPage<TypeContext<ChartRequest>>
    {
        public ChartRequestView()
        {
        }
        public override void Execute()
        {











            
            #line 11 "..\..\Chart\Views\ChartRequestView.cshtml"
Write(Html.ScriptCss("~/Chart/Content/SF_Chart.css"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");


            
            #line 12 "..\..\Chart\Views\ChartRequestView.cshtml"
Write(Html.ScriptsJs("~/Chart/Scripts/SF_Chart.js",
                "~/Chart/Scripts/SF_Chart_Utils.js",
                "~/scripts/d3.v2.min.js",
                "~/scripts/colorbrewer.js"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");


            
            #line 16 "..\..\Chart\Views\ChartRequestView.cshtml"
   
    QueryDescription queryDescription =  (QueryDescription)ViewData[ViewDataKeys.QueryDescription];
    if (queryDescription == null)
    {
        queryDescription = DynamicQueryManager.Current.QueryDescription(Model.Value.QueryName);
        ViewData[ViewDataKeys.QueryDescription] = queryDescription;
    }
    
    List<FilterOption> filterOptions = (List<FilterOption>)ViewData[ViewDataKeys.FilterOptions];

    var entityColumn = queryDescription.Columns.SingleEx(a => a.IsEntity);
    Type entitiesType = entityColumn.Type.CleanType();


            
            #line default
            #line hidden
WriteLiteral("<div id=\"");


            
            #line 29 "..\..\Chart\Views\ChartRequestView.cshtml"
    Write(Model.Compose("sfChartControl"));

            
            #line default
            #line hidden
WriteLiteral("\" \r\n    class=\"sf-search-control sf-chart-control\" \r\n    data-subtokens-url=\"");


            
            #line 31 "..\..\Chart\Views\ChartRequestView.cshtml"
                   Write(Url.Action("NewSubTokensCombo", "Chart"));

            
            #line default
            #line hidden
WriteLiteral("\" \r\n    data-add-filter-url=\"");


            
            #line 32 "..\..\Chart\Views\ChartRequestView.cshtml"
                    Write(Url.Action("AddFilter", "Chart"));

            
            #line default
            #line hidden
WriteLiteral("\" \r\n    data-prefix=\"");


            
            #line 33 "..\..\Chart\Views\ChartRequestView.cshtml"
            Write(Model.ControlID);

            
            #line default
            #line hidden
WriteLiteral("\" >\r\n    ");


            
            #line 34 "..\..\Chart\Views\ChartRequestView.cshtml"
Write(Html.HiddenRuntimeInfo(Model));

            
            #line default
            #line hidden
WriteLiteral("\r\n    ");


            
            #line 35 "..\..\Chart\Views\ChartRequestView.cshtml"
Write(Html.Hidden(Model.Compose("sfOrders"), Model.Value.Orders.IsNullOrEmpty() ? "" :
        (Model.Value.Orders.ToString(oo => (oo.OrderType == OrderType.Ascending ? "" : "-") + oo.Token.FullKey(), ";") + ";")));

            
            #line default
            #line hidden
WriteLiteral("\r\n    <div>\r\n        <div class=\"sf-fields-list\">\r\n            <div class=\"ui-wid" +
"get sf-filters\">\r\n                <div class=\"ui-widget-header ui-corner-top sf-" +
"filters-body\">\r\n                    ");


            
            #line 41 "..\..\Chart\Views\ChartRequestView.cshtml"
               Write(Html.ChartTokenBuilder(null, Model.Value, queryDescription, Model));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    ");


            
            #line 42 "..\..\Chart\Views\ChartRequestView.cshtml"
               Write(Html.Href(
                            Model.Compose("btnAddFilter"),
                            SearchMessage.FilterBuilder_AddFilter.NiceToString(),
                            "",
                            JavascriptMessage.Signum_selectToken.NiceToString(),
                            "sf-query-button sf-add-filter sf-disabled",
                            new Dictionary<string, object> 
                            { 
                                { "data-icon", "ui-icon-arrowthick-1-s" },
                                { "data-url", Url.SignumAction("AddFilter") }
                            }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </div>\r\n");


            
            #line 54 "..\..\Chart\Views\ChartRequestView.cshtml"
                   
                    Html.RenderPartial(Navigator.Manager.FilterBuilderView); 
                

            
            #line default
            #line hidden
WriteLiteral("            </div>\r\n        </div>\r\n    </div>\r\n    <div id=\"");


            
            #line 60 "..\..\Chart\Views\ChartRequestView.cshtml"
        Write(Model.Compose("sfChartBuilderContainer"));

            
            #line default
            #line hidden
WriteLiteral("\">\r\n        ");


            
            #line 61 "..\..\Chart\Views\ChartRequestView.cshtml"
   Write(Html.Partial(ChartClient.ChartBuilderView, Model.Value));

            
            #line default
            #line hidden
WriteLiteral("\r\n    </div>\r\n    <script type=\"text/javascript\">\r\n        var str = ");


            
            #line 64 "..\..\Chart\Views\ChartRequestView.cshtml"
              Write(MvcHtmlString.Create(Model.Value.ToJS()));

            
            #line default
            #line hidden
WriteLiteral(";\r\n        $(\'#");


            
            #line 65 "..\..\Chart\Views\ChartRequestView.cshtml"
       Write(Model.Compose("sfChartBuilderContainer"));

            
            #line default
            #line hidden
WriteLiteral("\').chartBuilder($.extend({ prefix: \'");


            
            #line 65 "..\..\Chart\Views\ChartRequestView.cshtml"
                                                                                    Write(Model.ControlID);

            
            #line default
            #line hidden
WriteLiteral("\' }, str));\r\n    </script>\r\n    <div class=\"sf-query-button-bar\">\r\n        <butto" +
"n type=\"submit\" class=\"sf-query-button sf-chart-draw\" data-icon=\"ui-icon-refresh" +
"\" id=\"");


            
            #line 68 "..\..\Chart\Views\ChartRequestView.cshtml"
                                                                                               Write(Model.Compose("qbDraw"));

            
            #line default
            #line hidden
WriteLiteral("\" data-url=\"");


            
            #line 68 "..\..\Chart\Views\ChartRequestView.cshtml"
                                                                                                                                    Write(Url.Action<ChartController>(cc => cc.Draw(Model.ControlID)));

            
            #line default
            #line hidden
WriteLiteral("\">");


            
            #line 68 "..\..\Chart\Views\ChartRequestView.cshtml"
                                                                                                                                                                                                   Write(ChartMessage.Chart_Draw.NiceToString());

            
            #line default
            #line hidden
WriteLiteral("</button>\r\n        <button class=\"sf-query-button sf-chart-script-edit\" data-icon" +
"=\"ui-icon-script\" id=\"");


            
            #line 69 "..\..\Chart\Views\ChartRequestView.cshtml"
                                                                                       Write(Model.Compose("qbEdit"));

            
            #line default
            #line hidden
WriteLiteral("\">");


            
            #line 69 "..\..\Chart\Views\ChartRequestView.cshtml"
                                                                                                                 Write(ChartMessage.UserChart_Edit.NiceToString());

            
            #line default
            #line hidden
WriteLiteral("</button>\r\n        ");


            
            #line 70 "..\..\Chart\Views\ChartRequestView.cshtml"
   Write(UserChartClient.GetChartMenu(this.ViewContext, queryDescription.QueryName, entitiesType, Model.ControlID).ToString(Html));

            
            #line default
            #line hidden
WriteLiteral("\r\n    </div>\r\n    <div class=\"clearall\">\r\n    </div>\r\n    <div id=\"");


            
            #line 74 "..\..\Chart\Views\ChartRequestView.cshtml"
        Write(Model.Compose("divResults"));

            
            #line default
            #line hidden
WriteLiteral("\" class=\"ui-widget ui-corner-all sf-search-results-container\">\r\n");


            
            #line 75 "..\..\Chart\Views\ChartRequestView.cshtml"
           Html.RenderPartial(ChartClient.ChartResultsView); 

            
            #line default
            #line hidden
WriteLiteral("    </div>\r\n    <script type=\"text/javascript\">\r\n        (function () {\r\n        " +
"    var $myChart = SF.Chart.getFor(\'");


            
            #line 79 "..\..\Chart\Views\ChartRequestView.cshtml"
                                       Write(Model.ControlID);

            
            #line default
            #line hidden
WriteLiteral("\');\r\n            //$myChart.initOrders();\r\n        })();\r\n    </script>\r\n</div>\r\n" +
"");


        }
    }
}
#pragma warning restore 1591
