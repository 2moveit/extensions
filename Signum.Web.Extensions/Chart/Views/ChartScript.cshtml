@using Signum.Entities.Chart
@using Signum.Web.Files
@using Signum.Engine
@using Signum.Web.Chart
@Html.ScriptCss(
    "~/Chart/Content/Chart.css")
@using (var cc = Html.TypeContext<ChartScriptDN>())
{
    var imageRoute=cc.Compose("ImageIco");
    
    <div>
        <div style="float: left">
            @Html.ValueLine(cc, c => c.Name)
            @Html.FileLine(cc, c => c.Icon.TryCC(i => i.Retrieve()), a =>
           {
               a.FormGroupStyle = FormGroupStyle.Horizontal;
               a.LabelText = Html.PropertyNiceName(() => cc.Value.Icon);
               a.AttachFunction = new JsLineFunction(ChartClient.ModuleScript, "refreshIcon", imageRoute);
           })
        </div>
        @if (cc.Value.Icon != null && !cc.Value.Icon.IsNew)
        {
            <div style="float: left">
                <img id="@imageRoute" src="@Url.Action((FileController fc) => fc.Download(new RuntimeInfo(cc.Value.Icon).ToString()))" />
            </div>
        }
        <div class="clearall" />
    </div>
 
    @Html.ValueLine(cc, c => c.GroupBy)
    <div class="sf-chartscript-columns">
        @Html.EntityRepeater(cc, c => c.Columns)
    </div>
    
    @Html.Partial(Signum.Web.Chart.ChartClient.ChartScriptCodeView, cc)
}
