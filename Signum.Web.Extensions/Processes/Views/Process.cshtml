@using Signum.Entities.Processes
@using Signum.Web.Processes
@Html.ScriptCss("~/processes/Content/Processes.css")

@using (var e = Html.TypeContext<ProcessDN>())
{
    @Html.ValueLine(e, f => f.State, f => f.ReadOnly = true)
    @Html.EntityLine(e, f => f.Algorithm)
    @Html.EntityLine(e, f => f.Session, f => f.ReadOnly = true)
    @Html.EntityLine(e, f => f.Data, f => f.ReadOnly = true)
    @Html.ValueLine(e, f => f.MachineName)
    @Html.ValueLine(e, f => f.ApplicationName)
    @Html.ValueLine(e, f => f.CreationDate)
    @Html.ValueLine(e, f => f.PlannedDate, f => { f.HideIfNull = true; f.ReadOnly = true; })
    @Html.ValueLine(e, f => f.CancelationDate, f => { f.HideIfNull = true; f.ReadOnly = true; })
    @Html.ValueLine(e, f => f.QueuedDate, f => { f.HideIfNull = true; f.ReadOnly = true; })
    @Html.ValueLine(e, f => f.ExecutionStart, f => { f.HideIfNull = true; f.ReadOnly = true; })
    @Html.ValueLine(e, f => f.ExecutionEnd, f => { f.HideIfNull = true; f.ReadOnly = true; })
    @Html.ValueLine(e, f => f.SuspendDate, f => { f.HideIfNull = true; f.ReadOnly = true; })
    @Html.ValueLine(e, f => f.ExceptionDate, f => { f.HideIfNull = true; f.ReadOnly = true; })
    @Html.EntityLine(e, f => f.Exception, f => { f.HideIfNull = true; f.ReadOnly = true; })

    @Html.CountSearchControl(new FindOptions(typeof(ProcessExceptionLineDN), "Process", e.Value), csc =>
{
    csc.PopupViewPrefix = e.Compose("errors");
    csc.WriteQueryName = WriteQueryName.Field;
})

      if (e.Value.State == ProcessState.Executing || e.Value.State == ProcessState.Queued)
      {
    @:Progress:
    <br />
    <br />
    <div class="progressContainer">
        <div class="progressBar" id="progressBar" style="height: 100%; width: @Math.Round((double?)e.Value.Progress ?? 0, 0)%;">
        </div>
    </div>

    <script type="text/javascript">
        $(function () {
            @(new JsFunction(ProcessesClient.Module, "refreshUpdate", e.Value.Id, e.Prefix, Url.Action("GetProgressExecution", "Process")))
        })
    </script>
      }


}
