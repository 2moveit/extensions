#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Signum.Web.Extensions.Processes.Views
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 2 "..\..\Processes\Views\ProcessPanelTable.cshtml"
    using Signum.Engine.Processes;
    
    #line default
    #line hidden
    using Signum.Entities;
    using Signum.Utilities;
    
    #line 1 "..\..\Processes\Views\ProcessPanelTable.cshtml"
    using Signum.Utilities.ExpressionTrees;
    
    #line default
    #line hidden
    using Signum.Web;
    
    #line 3 "..\..\Processes\Views\ProcessPanelTable.cshtml"
    using Signum.Web.Processes;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "1.5.4.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Processes/Views/ProcessPanelTable.cshtml")]
    public partial class ProcessPanelTable : System.Web.Mvc.WebViewPage<ProcessLogicState>
    {
        public ProcessPanelTable()
        {
        }
        public override void Execute()
        {




WriteLiteral("<div id=\"processMainDiv\">\r\n        <br />\r\n    <h2>ProcessLogic state</h2>\r\n   \r\n" +
"    State: <strong>\r\n");


            
            #line 10 "..\..\Processes\Views\ProcessPanelTable.cshtml"
         if (Model.Running)
        {

            
            #line default
            #line hidden
WriteLiteral("            <span style=\"color: Green\">RUNNING</span>\r\n");


            
            #line 13 "..\..\Processes\Views\ProcessPanelTable.cshtml"
        }
        else
        {

            
            #line default
            #line hidden
WriteLiteral("            <span style=\"color: Red\">STOPPED</span>\r\n");


            
            #line 17 "..\..\Processes\Views\ProcessPanelTable.cshtml"
        }
            
            #line default
            #line hidden
WriteLiteral("</strong>\r\n    <br />\r\n    MaxDegreeOfParallelism: ");


            
            #line 19 "..\..\Processes\Views\ProcessPanelTable.cshtml"
                       Write(Model.MaxDegreeOfParallelism);

            
            #line default
            #line hidden
WriteLiteral("\r\n    <br />\r\n    InitialDelayMiliseconds: ");


            
            #line 21 "..\..\Processes\Views\ProcessPanelTable.cshtml"
                        Write(Model.InitialDelayMiliseconds);

            
            #line default
            #line hidden
WriteLiteral("\r\n    <br />\r\n    NextPlannedExecution: ");


            
            #line 23 "..\..\Processes\Views\ProcessPanelTable.cshtml"
                      Write(Model.NextPlannedExecution.TryToString() ?? "-None-");

            
            #line default
            #line hidden
WriteLiteral(@"
    <br />
    <table class=""sf-search-results sf-stats-table"">
        <thead>
            <tr>
                <th>
                    Process
                </th>
                <th>
                    State
                </th>
                <th>
                    Progress
                </th>
                <th>
                    IsCancellationRequested
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td colspan=""4"">
                    <b>Executing (");


            
            #line 45 "..\..\Processes\Views\ProcessPanelTable.cshtml"
                             Write(Model.Executing.Count);

            
            #line default
            #line hidden
WriteLiteral(")</b>\r\n                </td>\r\n            </tr>\r\n");


            
            #line 48 "..\..\Processes\Views\ProcessPanelTable.cshtml"
             foreach (var item in Model.Executing)
            {

            
            #line default
            #line hidden
WriteLiteral("                <tr>\r\n                    <td>");


            
            #line 51 "..\..\Processes\Views\ProcessPanelTable.cshtml"
                   Write(Html.LightEntityLine(item.ProcessExecution, true));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    </td>\r\n                    <td>");


            
            #line 53 "..\..\Processes\Views\ProcessPanelTable.cshtml"
                   Write(item.State);

            
            #line default
            #line hidden
WriteLiteral("\r\n                    </td>\r\n                    <td>");


            
            #line 55 "..\..\Processes\Views\ProcessPanelTable.cshtml"
                   Write(item.Progress.TryToString("p"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    </td>\r\n                    <td>");


            
            #line 57 "..\..\Processes\Views\ProcessPanelTable.cshtml"
                   Write(item.IsCancellationRequested);

            
            #line default
            #line hidden
WriteLiteral("\r\n                    </td>\r\n                </tr>\r\n");


            
            #line 60 "..\..\Processes\Views\ProcessPanelTable.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            <tr>\r\n                <td colspan=\"4\">\r\n                    <b>Queued" +
" (");


            
            #line 63 "..\..\Processes\Views\ProcessPanelTable.cshtml"
                          Write(Model.Queue.Count);

            
            #line default
            #line hidden
WriteLiteral(")</b>\r\n                </td>\r\n            </tr>\r\n");


            
            #line 66 "..\..\Processes\Views\ProcessPanelTable.cshtml"
             foreach (var item in Model.Queue)
            {

            
            #line default
            #line hidden
WriteLiteral("                <tr>\r\n                    <td>");


            
            #line 69 "..\..\Processes\Views\ProcessPanelTable.cshtml"
                   Write(Html.LightEntityLine(item.ProcessExecution, true));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    </td>\r\n                    <td>");


            
            #line 71 "..\..\Processes\Views\ProcessPanelTable.cshtml"
                   Write(item.State);

            
            #line default
            #line hidden
WriteLiteral("\r\n                    </td>\r\n                    <td>");


            
            #line 73 "..\..\Processes\Views\ProcessPanelTable.cshtml"
                   Write(item.Progress);

            
            #line default
            #line hidden
WriteLiteral("\r\n                    </td>\r\n                    <td>");


            
            #line 75 "..\..\Processes\Views\ProcessPanelTable.cshtml"
                   Write(item.IsCancellationRequested);

            
            #line default
            #line hidden
WriteLiteral("\r\n                    </td>\r\n                </tr>\r\n");


            
            #line 78 "..\..\Processes\Views\ProcessPanelTable.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </tbody>\r\n    </table>\r\n\r\n    <br />\r\n    <h2>Latest Processes</h2>\r\n\r\n  " +
"  ");


            
            #line 85 "..\..\Processes\Views\ProcessPanelTable.cshtml"
Write(Html.SearchControl(new FindOptions(typeof(Signum.Entities.Processes.ProcessExecutionDN))
{
    OrderOptions = { new OrderOption("CreationDate", Signum.Entities.DynamicQuery.OrderType.Descending) },
    FilterMode = Signum.Web.FilterMode.Hidden,
    SearchOnLoad = true,
    ElementsPerPage = 10,
},new Context(null, "sc")));

            
            #line default
            #line hidden
WriteLiteral("\r\n    <br />\r\n</div>\r\n");


        }
    }
}
#pragma warning restore 1591
