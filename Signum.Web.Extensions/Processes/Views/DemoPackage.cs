//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using Signum.Utilities;
    using Signum.Entities;
    using Signum.Web;
    using System.Collections;
    using System.Collections.Specialized;
    using System.ComponentModel.DataAnnotations;
    using System.Configuration;
    using System.Text;
    using System.Text.RegularExpressions;
    using System.Web.Caching;
    using System.Web.DynamicData;
    using System.Web.SessionState;
    using System.Web.Profile;
    using System.Web.UI.WebControls;
    using System.Web.UI.WebControls.WebParts;
    using System.Web.UI.HtmlControls;
    using System.Xml.Linq;
    using Signum.Entities.Processes;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MvcRazorClassGenerator", "1.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Processes/Views/DemoPackage.cshtml")]
    public class _Page_Processes_Views_DemoPackage_cshtml : System.Web.Mvc.WebViewPage<dynamic>
    {


        public _Page_Processes_Views_DemoPackage_cshtml()
        {
        }
        protected System.Web.HttpApplication ApplicationInstance
        {
            get
            {
                return ((System.Web.HttpApplication)(Context.ApplicationInstance));
            }
        }
        public override void Execute()
        {

WriteLiteral("\r\n");


 using (var e = Html.TypeContext<DemoPackageDN>())
{
    
Write(Html.ValueLine(e, f => f.Name));

                                   
    
Write(Html.ValueLine(e, f => f.MainError));

                                        
    
Write(Html.ValueLine(e, f => f.RequestedLines));

                                             
    
Write(Html.ValueLine(e, f => f.DelayMilliseconds));

                                                
    
Write(Html.ValueLine(e, f => f.ErrorRate));

                                        
    
Write(Html.ValueLine(e, f => f.NumErrors, f => f.ReadOnly = true));

                                                                

    if (!e.Value.IsNew)
    {

WriteLiteral("    <fieldset>\r\n        <legend>Lines</legend>\r\n        ");


   Write(Html.SearchControl(new FindOptions(typeof(DemoPackageLineDN), "Package", e.Value)
   {
       Create = false,
       View = false,
       Async = true
   }, e));

WriteLiteral("\r\n    </fieldset>\r\n");


    }
}

        }
    }
}
