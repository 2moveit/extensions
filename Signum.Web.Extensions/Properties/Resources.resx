<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AreYouSureOfDeletingTheEntity012" xml:space="preserve">
    <value>Are you sure of deleting from the system the entity {0} ({1}:{2})?</value>
  </data>
  <data name="ArgumentFilePathIDWasNotPassedToTheController" xml:space="preserve">
    <value>Argument {filePathID} was not passed to the controller</value>
  </data>
  <data name="ConfirmNewPassword" xml:space="preserve">
    <value>Confirm new password</value>
  </data>
  <data name="ConstructFromManyOperation0NeedsSourceIdsAsParameter" xml:space="preserve">
    <value>Construct From Many Operation {{{0}}} needs source Ids as parameter</value>
  </data>
  <data name="ConstructFromManyOperation0NeedsSourceLazies" xml:space="preserve">
    <value>Construct From Many Operation {{{0}}} needs source Lites</value>
  </data>
  <data name="CouldNotCreateLiteWithoutAnIdToCallOperation0" xml:space="preserve">
    <value>Could not create Lite without an id to call Operation {{{0}}}</value>
  </data>
  <data name="CouldntCreateFilePathWithUnknownFileTypeForField0" xml:space="preserve">
    <value>Couldn't create FilePath with unknown FileType for field {{0}}</value>
  </data>
  <data name="CurrentPassword" xml:space="preserve">
    <value>Current password</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="ChangePasswordExplanation" xml:space="preserve">
    <value>Use this form to change your password</value>
  </data>
  <data name="EmailIsNotValid" xml:space="preserve">
    <value>The email is different from the stored email</value>
  </data>
  <data name="EmailMustHaveAValue" xml:space="preserve">
    <value>The email must have a value</value>
  </data>
  <data name="ErrorSavingFile" xml:space="preserve">
    <value>Error saving file</value>
  </data>
  <data name="FileTypePropertyOfFileLineSettingsMustBeSpecified" xml:space="preserve">
    <value>FileType property of FileLine settings must be specified for FileLine {0}</value>
  </data>
  <data name="HelpDocumentation" xml:space="preserve">
    <value>Help documentation</value>
  </data>
  <data name="InvalidNewPassword" xml:space="preserve">
    <value>Invalid new password</value>
  </data>
  <data name="InvalidOperationType0inTheConstructionOfOperation1" xml:space="preserve">
    <value>Invalid Operation Type {{0}} in the construction of the operation {{1}}</value>
  </data>
  <data name="InvalidUsernameOrPassword" xml:space="preserve">
    <value>Invalid username or password</value>
  </data>
  <data name="Key0NotFound" xml:space="preserve">
    <value>Key {0} not found</value>
  </data>
  <data name="MailBody_RememberPassword" xml:space="preserve">
    <value>We are sending you this email as you have requested to remember your password. For your safety, we have generated a new random password, that you will be able to modify later.&lt;br/&gt;&lt;br/&gt;The password is &lt;b&gt;{0}&lt;/b&gt;</value>
  </data>
  <data name="MailSubject_RememberPassword" xml:space="preserve">
    <value>Remember Password</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="PasswordDoesNotMatchCurrent" xml:space="preserve">
    <value>The given password doesn't match the current one</value>
  </data>
  <data name="PasswordHasBeenChangedSuccessfully" xml:space="preserve">
    <value>The password has been changed successfully</value>
  </data>
  <data name="PasswordHasBeenSent" xml:space="preserve">
    <value>The password has been sent to the provided mail account {0}</value>
  </data>
  <data name="PasswordMustHave0orMoreCharacters" xml:space="preserve">
    <value>The password must have {0} or more characters</value>
  </data>
  <data name="PasswordMustHaveAValue" xml:space="preserve">
    <value>The password must have a value</value>
  </data>
  <data name="Property0DoesNotExistInType1" xml:space="preserve">
    <value>Property {0} does not exist in type {1}</value>
  </data>
  <data name="Property0HasNoValue" xml:space="preserve">
    <value>Property {0} has no value</value>
  </data>
  <data name="Property0NotExistsInType1" xml:space="preserve">
    <value>Property {0} does not exist in type {1}</value>
  </data>
  <data name="RememberPassword" xml:space="preserve">
    <value>Remember password</value>
  </data>
  <data name="RememberPasswordExplanation" xml:space="preserve">
    <value>Type your username and your email address to receive an email message with the password</value>
  </data>
  <data name="Source" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="StackTrace" xml:space="preserve">
    <value>StackTrace</value>
  </data>
  <data name="TargetSite" xml:space="preserve">
    <value>Target site</value>
  </data>
  <data name="TheresNotAViewForType0" xml:space="preserve">
    <value>There's no view registered for type {0}</value>
  </data>
  <data name="TheSpecifiedPasswordsDontMatch" xml:space="preserve">
    <value>The specified passwords don't match</value>
  </data>
  <data name="UserNameAlreadyExists" xml:space="preserve">
    <value>The provided User Name is already registered, please choose another one</value>
  </data>
  <data name="UserNameMustHaveAValue" xml:space="preserve">
    <value>The user name must have a value</value>
  </data>
  <data name="ViewName" xml:space="preserve">
    <value>View name</value>
  </data>
  <data name="YouMustEnterTheCurrentPassword" xml:space="preserve">
    <value>You must enter the current password</value>
  </data>
  <data name="YouMustRepeatTheNewPassword" xml:space="preserve">
    <value>You must repeat the new password</value>
  </data>
  <data name="EmailNotExistsDatabase" xml:space="preserve">
    <value>The provided email address does not belong to any registered used</value>
  </data>
  <data name="ResetPassword" xml:space="preserve">
    <value>Reset Password</value>
  </data>
  <data name="ResetPasswordCodeHasBeenSent" xml:space="preserve">
    <value>A confirmation code to reset your password has been sent to the email account {0}</value>
  </data>
  <data name="ResetPasswordSuccess" xml:space="preserve">
    <value>Your password has been successfully changed</value>
  </data>
  <data name="ChangePasswordAspx_ActualPassword" xml:space="preserve">
    <value>Current password</value>
  </data>
  <data name="ChangePasswordAspx_ChangePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="ChangePasswordAspx_ConfirmNewPassword" xml:space="preserve">
    <value>Confirm new password</value>
  </data>
  <data name="ChangePasswordAspx_NewPassword" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="ChangePasswordAspx_WriteActualPasswordAndNewOne" xml:space="preserve">
    <value>Write your current password and the new one</value>
  </data>
</root>