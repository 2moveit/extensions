@using System.Reflection
@using Signum.Engine.Translation
@using Signum.Web.Translation.Controllers
@using System.Globalization;
@using Signum.Engine.Basics;
@model Dictionary<Type, Dictionary<CultureInfo, TranslatedTypeSummary>>
@{
    ViewBag.Title = "Translated instances";        
}

@Html.ScriptCss("~/Translation/Content/Translation.css")

@if (Model.IsEmpty())
{
    <pre>No instance properties to translate</pre>   
}
else
{
    var langs = Model.First().Value.Keys;

    <table class="st">
        <tr>
            <th></th>
            @foreach (var ci in langs)
            {
                <th>@ci.Name</th>
            }
        </tr>
        @foreach (var type in Model)
        {
            <tr>
                <th>@type.Key.NiceName()</th>
                @foreach (var tf in type.Value.Values)
                {
                    <td>
                        @Html.ActionLink("view", (TranslatedInstanceController tc) => tc.View(TypeLogic.GetCleanName(tf.Type), tf.CultureInfo.Name))
                        <br />
                        @Html.ActionLink("sync", (TranslatedInstanceController tc) => tc.Sync(TypeLogic.GetCleanName(tf.Type), tf.CultureInfo.Name), new { @class = "status-" + tf.State.ToString() })
                    </td>
                }
            </tr>
        }
    </table>
}