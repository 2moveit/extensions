//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using System.Collections;
    using System.Collections.Specialized;
    using System.ComponentModel.DataAnnotations;
    using System.Configuration;
    using System.Text;
    using System.Text.RegularExpressions;
    using System.Web.Caching;
    using System.Web.DynamicData;
    using System.Web.SessionState;
    using System.Web.Profile;
    using System.Web.UI.WebControls;
    using System.Web.UI.WebControls.WebParts;
    using System.Web.UI.HtmlControls;
    using System.Xml.Linq;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using Signum.Utilities;
    using Signum.Entities;
    using Signum.Web;
    using System.Globalization;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MvcRazorClassGenerator", "1.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Calendar/Views/Calendar.cshtml")]
    public class _Page_Calendar_Views_Calendar_cshtml : System.Web.Mvc.WebViewPage<dynamic>
    {


        public _Page_Calendar_Views_Calendar_cshtml()
        {
        }
        protected System.Web.HttpApplication ApplicationInstance
        {
            get
            {
                return ((System.Web.HttpApplication)(Context.ApplicationInstance));
            }
        }
        public override void Execute()
        {

WriteLiteral("\r\n");


Write(Html.ScriptCss("~/calendar/content/calendar.css"));

WriteLiteral("\r\n\r\n");


  
    DateTime startDate = ViewBag.StartDate;

    int daysToMove = ((int)startDate.DayOfWeek + 6) % 7;
    startDate = startDate.AddDays(-daysToMove);
    
    DateTime endDate = ViewBag.EndDate;
    Func<DateTime, int, HelperResult> cellTemplate = ViewBag.CellTemplate;


WriteLiteral("\r\n");


 if (!ViewData.ContainsKey("ShowSlider") || ViewBag.ShowSlider)
{ 

WriteLiteral("    <div class=\"sf-annual-calendar-slider\">\r\n    </div>\r\n");


}

WriteLiteral(@"
<table class=""sf-annual-calendar"">
    <thead>
        <tr>
            <th></th>
            <th>L</th>
            <th>M</th>
            <th>X</th>
            <th>J</th>
            <th>V</th>
            <th>S</th>
            <th>D</th>
        </tr>
    </thead>
    <tbody>
");


           int max = (int)(endDate - startDate).TotalDays; 


         for (int d = 0; d < max; d++)
        {

WriteLiteral("            <tr>\r\n                <td class=\"sf-annual-calendar-month\">\r\n");


                      
            string month = CultureInfo.CurrentUICulture.DateTimeFormat.AbbreviatedMonthNames[startDate.AddDays(d).Month - 1];
            if (startDate.AddDays(d).Month != startDate.AddDays(d + 6).Month)
            {
                month += " / " + CultureInfo.CurrentUICulture.DateTimeFormat.AbbreviatedMonthNames[startDate.AddDays(d).Month];
            }
                    

WriteLiteral("                    ");


               Write(month);

WriteLiteral("\r\n                </td>\r\n");


                 for (int dow = 0; dow < 7; dow++)
                {
                    DateTime day = startDate.AddDays(d + dow);

WriteLiteral("                    <td data-date=\"");


                              Write(day.ToShortDateString());

WriteLiteral("\">\r\n                        ");


                   Write(cellTemplate(day, d + dow));

WriteLiteral("\r\n                    </td>\r\n");


                }


                   d += 6; 

WriteLiteral("            </tr>    \r\n");


        }

WriteLiteral("    </tbody>\r\n</table>\r\n\r\n");


Write(Html.ScriptsJs("~/calendar/scripts/calendar.js"));

WriteLiteral("\r\n\r\n");


        }
    }
}
