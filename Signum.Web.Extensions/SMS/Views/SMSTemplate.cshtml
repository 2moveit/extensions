@using Signum.Engine
@using Signum.Entities.SMS
@using Signum.Entities
@using Signum.Web
@using Signum.Web.SMS
@using Signum.Engine.SMS
@using Signum.Utilities
@using Signum.Web.Mailing

@Html.ScriptCss("~/SMS/Content/SMS.css")

@using (var tc = Html.TypeContext<SMSTemplateDN>())
{   
    @Html.ValueLine(tc, s => s.Name)
    @Html.ValueLine(tc, s => s.Active, vl => vl.ReadOnly = true)
    @Html.ValueLine(tc, s => s.StartDate)
    @Html.ValueLine(tc, s => s.EndDate) 
    
    @Html.ValueLine(tc, s => s.From) 
    @Html.ValueLine(tc, s => s.Certified)
    @Html.ValueLine(tc, s => s.EditableMessage)
    
    @Html.ValueLine(tc, s => s.RemoveNoSMSCharacters)
    @Html.ValueLine(tc, s => s.MessageLengthExceeded)
    
    <div class="clearall"></div> 
    <div class="col-sm-5 row">
        @Html.EntityCombo(tc, s => s.AssociatedType, ec =>
        {
            ec.LabelColumns = new BsColumn(5);
            ec.Data = SMSLogic.RegisteredDataObjectProviders();
            ec.ComboHtmlProperties["class"] = "sf-associated-type";
            ec.AttachFunction = SMSClient.Module["attachAssociatedType"](ec, Url.Action<SMSController>(s => s.GetLiteralsForType()));
        })
        
        @(new HtmlTag("select").Attr("multiple", "multiple").Id("sfLiterals").Class("form-control").ToHtml())
        <input type="button" class="btn sf-button" id="sfInsertLiteral" value="@SmsMessage.Insert.NiceToString()" />
    </div>
    
    <div class="col-sm-7">
        @Html.EntityTabRepeater(tc, e => e.Messages, er =>
            {
                er.PreserveViewData = true;
            })
    </div>
    
    <script>
        @(SMSClient.Module["init"](Url.Action<SMSController>(s => s.RemoveNoSMSCharacters("")),
    Url.Action<SMSController>(s => s.GetDictionaries())))
    </script>
}
}
