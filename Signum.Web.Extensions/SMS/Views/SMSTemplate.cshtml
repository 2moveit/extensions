@using Signum.Engine
@using Signum.Entities.SMS;
@using Signum.Web;
@using Signum.Web.SMS;
@using Signum.Engine.SMS;
@using Signum.Utilities;
@Html.ScriptCss("~/SMS/Content/SMS.css")
@using (var e = Html.TypeContext<SMSTemplateDN>())
{   
    @Html.ValueLine(e, s => s.Name)
    @Html.ValueLine(e, s => s.Active, vl => vl.ReadOnly = true)

    <div id="sfTemplateText">
        @Html.ValueLine(e, s => s.Message, vl =>
        {
            vl.ValueLineType = ValueLineType.TextArea;
            vl.ValueHtmlProps["cols"] = "30";
            vl.ValueHtmlProps["rows"] = "6";
        })
        <div id="sfCharactersLeft" data-url="@(Url.Action<SMSController>(s => s.GetDictionaries()))">
            <p>
                Remaining characters: <span id="sfCharsLeft"></span>
            </p>
        </div>
        <div>
            <input type="button" class="sf-button" id="sfRemoveNoSMSChars" value="Remove non valid characters" data-url="@(Url.Action<SMSController>(s => s.RemoveNoSMSCharacters("")))"/>
        </div>
    </div>
    
    <div id="sfTemplateLiterals">
        @using (Html.FieldInline())
        {
            @Html.EntityCombo(e, s => s.AssociatedType, ec =>
            {
                ec.Data = SMSLogic.RegisteredDataObjectProviders().Select(rt => (Lite)rt).ToList();
                ec.OnEntityChanged = "SF.SMS.fillLiterals()";
                ec.ComboHtmlProperties["class"] = "sf-associated-type";
                ec.ComboHtmlProperties["data-url"] = Url.Action<SMSController>(s => s.GetLiteralsForType(ec.ControlID));
                ec.ComboHtmlProperties["data-control-id"] = ec.ControlID;
            })
        }
        @(new HtmlTag("select").Attr("multiple", "multiple").Id("sfLiterals").ToHtml())
        <br />
        <input type="button" class="sf-button" id="sfInsertLiteral" value="Insert" />
    </div>
    
    <div class="clearall"></div>
    
    @Html.ValueLine(e, s => s.RemoveNoSMSCharacters)
    @Html.ValueLine(e, s => s.MessageLengthExceeded)
    @Html.ValueLine(e, s => s.From)
    @Html.ValueLine(e, s => s.StartDate)
    @Html.ValueLine(e, s => s.EndDate)
   
}
@Html.ScriptsJs("~/SMS/Scripts/SF_SMS.js")
