//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using System.Collections;
    using System.Collections.Specialized;
    using System.ComponentModel.DataAnnotations;
    using System.Configuration;
    using System.Text;
    using System.Text.RegularExpressions;
    using System.Web.Caching;
    using System.Web.DynamicData;
    using System.Web.SessionState;
    using System.Web.Profile;
    using System.Web.UI.WebControls;
    using System.Web.UI.WebControls.WebParts;
    using System.Web.UI.HtmlControls;
    using System.Xml.Linq;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using Signum.Utilities;
    using Signum.Entities;
    using Signum.Web;
    using Signum.Engine;
    using Signum.Entities.SMS;
    using Signum.Web.SMS;
    using Signum.Engine.SMS;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MvcRazorClassGenerator", "1.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/SMS/Views/SMSTemplate.cshtml")]
    public class _Page_SMS_Views_SMSTemplate_cshtml : System.Web.Mvc.WebViewPage<dynamic>
    {


        public _Page_SMS_Views_SMSTemplate_cshtml()
        {
        }
        protected System.Web.HttpApplication ApplicationInstance
        {
            get
            {
                return ((System.Web.HttpApplication)(Context.ApplicationInstance));
            }
        }
        public override void Execute()
        {







Write(Html.ScriptCss("~/SMS/Content/SMS.css"));

WriteLiteral("\r\n");


 using (var e = Html.TypeContext<SMSTemplateDN>())
{   
    
Write(Html.ValueLine(e, s => s.Name));

                                   
    
Write(Html.ValueLine(e, s => s.Active, vl => vl.ReadOnly = true));

                                                               


WriteLiteral("    <div id=\"sfTemplateText\">\r\n        ");


   Write(Html.ValueLine(e, s => s.Message, vl =>
        {
            vl.ValueLineType = ValueLineType.TextArea;
            vl.ValueHtmlProps["cols"] = "30";
            vl.ValueHtmlProps["rows"] = "6";
        }));

WriteLiteral("\r\n        <div id=\"sfCharactersLeft\" data-url=\"");


                                         Write(Url.Action<SMSController>(s => s.GetDictionaries()));

WriteLiteral("\">\r\n            <p>\r\n                <span>");


                 Write(Signum.Web.Extensions.Properties.Resources.RemainingCharacters);

WriteLiteral("</span>: <span id=\"sfCharsLeft\"></span>\r\n            </p>\r\n        </div>\r\n      " +
"  <div>\r\n            <input type=\"button\" class=\"sf-button\" id=\"sfRemoveNoSMSCha" +
"rs\" value=\"");


                                                                             Write(Signum.Web.Extensions.Properties.Resources.RemoveNonValidCharacters);

WriteLiteral("\" data-url=\"");


                                                                                                                                                              Write(Url.Action<SMSController>(s => s.RemoveNoSMSCharacters("")));

WriteLiteral("\"/>\r\n        </div>\r\n    </div>\r\n");


    

WriteLiteral("    <div id=\"sfTemplateLiterals\">\r\n");


         using (Html.FieldInline())
        {
            
       Write(Html.EntityCombo(e, s => s.AssociatedType, ec =>
            {
                ec.Data = SMSLogic.RegisteredDataObjectProviders().Select(rt => (Lite)rt).ToList();
                ec.OnEntityChanged = "SF.SMS.fillLiterals()";
                ec.ComboHtmlProperties["class"] = "sf-associated-type";
                ec.ComboHtmlProperties["data-url"] = Url.Action<SMSController>(s => s.GetLiteralsForType(ec.ControlID));
                ec.ComboHtmlProperties["data-control-id"] = ec.ControlID;
            }));

              
        }

WriteLiteral("        ");


    Write(new HtmlTag("select").Attr("multiple", "multiple").Id("sfLiterals").ToHtml());

WriteLiteral("\r\n        <br />\r\n        <input type=\"button\" class=\"sf-button\" id=\"sfInsertLite" +
"ral\" value=\"");


                                                                      Write(Signum.Web.Extensions.Properties.Resources.Insert);

WriteLiteral("\" />\r\n    </div>\r\n");


    

WriteLiteral("    <div class=\"clearall\"></div>\r\n");


    
    
Write(Html.ValueLine(e, s => s.RemoveNoSMSCharacters));

                                                    
    
Write(Html.ValueLine(e, s => s.MessageLengthExceeded));

                                                    
    
Write(Html.ValueLine(e, s => s.From));

                                   
    
Write(Html.ValueLine(e, s => s.StartDate));

                                        
    
Write(Html.ValueLine(e, s => s.EndDate));

                                      
   
}


Write(Html.ScriptsJs("~/SMS/Scripts/SF_SMS.js"));

WriteLiteral("\r\n");


        }
    }
}
