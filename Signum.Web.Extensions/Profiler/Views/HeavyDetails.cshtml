@using Signum.Utilities.ExpressionTrees
@using Signum.Web.Profiler
@model HeavyProfilerEntry
<h2>Profiler Entry (
    @foreach (var e in Model.FollowC(a => a.Parent).Skip(1).Reverse())
    {
        @Html.ProfilerEntry(e.Index.ToString(), e.FullIndex())@:.
        }
    @Model.Index.ToString())
</h2>
@Html.ActionLink("(View all)", (ProfilerController pc) => pc.Heavy(false))
@Html.ActionLink("Download", (ProfilerController pc) => pc.DownloadFile(Model.FullIndex()))
<br />
<h3>Breakdown</h3>
<div class="sf-profiler-chart" data-detail-url="@Url.Action("HeavyRoute", "Profiler")">
</div>
<br />
<table class="sf-search-results">
    <tr>
        <th>Role
        </th>
        <td>
            @Model.Role
        </td>
    </tr>
    <tr>
        <th>Time
        </th>
        <td>
            @Model.Elapsed.NiceToString()
        </td>
    </tr>
</table>
<br />
<h3>Aditional Data</h3>
<div>
    <pre>
    <code>
        @Model.AdditionalData
    </code>
    </pre>
</div>
<br />
<h3>StackTrace</h3>
@if (Model.StackTrace == null)
{
    <span>No StackTrace</span>
}
else
{
    <table class="sf-search-results">
        <thead>
            <tr>
                <th>Type
                </th>
                <th>Method
                </th>
                <th>FileLine
                </th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.StackTrace.FrameCount; i++)
            {
                var frame = Model.StackTrace.GetFrame(i);
                var type = frame.GetMethod().DeclaringType;
                <tr>
                    <td>
                        @if (type != null)
                        {
                            var color = ColorExtensions.ToHtmlColor(type.Assembly.FullName.GetHashCode());
                    
                            <span style="color:@color">@frame.GetMethod().DeclaringType.TryCC(t => t.TypeName())</span>
                        }
                    </td>
                    <td>
                        @frame.GetMethod().Name
                    </td>
                    <td>
                        @frame.GetFileName() (@frame.GetFileLineNumber())
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<br />
@Html.ScriptCss("~/Profiler/Content/SF_Profiler.css")
@{ 
    var fullTree = Model.FollowC(e => e.Parent).ToList();
    fullTree.AddRange(Model.Descendants()); 
}
<script type="text/javascript">
    $(function() {
       @(new JsFunction(ProfilerClient.Module, "heavyDetailsChart", fullTree.HeavyDetailsToJson(), Model.Depth));
    });
</script>
