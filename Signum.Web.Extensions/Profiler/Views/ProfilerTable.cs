//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using Signum.Utilities;
    using Signum.Entities;
    using Signum.Web;
    using System.Collections;
    using System.Collections.Specialized;
    using System.ComponentModel.DataAnnotations;
    using System.Configuration;
    using System.Text;
    using System.Text.RegularExpressions;
    using System.Web.Caching;
    using System.Web.DynamicData;
    using System.Web.SessionState;
    using System.Web.Profile;
    using System.Web.UI.WebControls;
    using System.Web.UI.WebControls.WebParts;
    using System.Web.UI.HtmlControls;
    using System.Xml.Linq;
    using Signum.Utilities.ExpressionTrees;
    using Signum.Web.Profiler;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MvcRazorClassGenerator", "1.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Profiler/Views/ProfilerTable.cshtml")]
    public class _Page_Profiler_Views_ProfilerTable_cshtml : System.Web.Mvc.WebViewPage<List<HeavyProfilerEntry>>
    {


        public _Page_Profiler_Views_ProfilerTable_cshtml()
        {
        }
        protected System.Web.HttpApplication ApplicationInstance
        {
            get
            {
                return ((System.Web.HttpApplication)(Context.ApplicationInstance));
            }
        }
        public override void Execute()
        {



WriteLiteral(@"
<table class=""sf-search-results sf-profiler-table"">
    <thead>
        <tr>
            <th>
                Entry
            </th>
            <th>
                Role
            </th>
            <th>
                Time
            </th>
             <th>
                Method
            </th>
            <th>
                Aditional Data
            </th>
        </tr>
    </thead>
    <tbody>
");


         for (int i = 0; i < Model.Count; i++)
        {
            var entry = Model[i];

WriteLiteral("            <tr>\r\n                <td>\r\n                    ");


               Write(Html.ProfilerEntry("View", entry.FullIndex()));

WriteLiteral("\r\n                </td>\r\n                <td>\r\n                    ");


               Write(entry.Role);

WriteLiteral("\r\n                </td>\r\n                <td align=\"right\">\r\n                    " +
"");


               Write(entry.Elapsed.NiceToString());

WriteLiteral("\r\n                </td>\r\n                <td>\r\n                    ");


                Write(entry.Type.TypeName());

WriteLiteral(".");


                                        Write(entry.Method.Name);

WriteLiteral("\r\n                </td>\r\n                <td>\r\n                    ");


               Write(entry.AditionalData.TryCC(o => o.ToString().TryLeft(50)));

WriteLiteral("\r\n                </td>\r\n            </tr>\r\n");


        }

WriteLiteral("    </tbody>\r\n</table>\r\n<br />\r\n");


        }
    }
}
