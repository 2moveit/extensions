//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using Signum.Utilities;
    using Signum.Entities;
    using Signum.Web;
    using System.Collections;
    using System.Collections.Specialized;
    using System.ComponentModel.DataAnnotations;
    using System.Configuration;
    using System.Text;
    using System.Text.RegularExpressions;
    using System.Web.Caching;
    using System.Web.DynamicData;
    using System.Web.SessionState;
    using System.Web.Profile;
    using System.Web.UI.WebControls;
    using System.Web.UI.WebControls.WebParts;
    using System.Web.UI.HtmlControls;
    using System.Xml.Linq;
    using Signum.Entities.Exceptions;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MvcRazorClassGenerator", "1.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Exception/Views/ExceptionLog.cshtml")]
    public class _Page_Exception_Views_ExceptionLog_cshtml : System.Web.Mvc.WebViewPage<dynamic>
    {


        public _Page_Exception_Views_ExceptionLog_cshtml()
        {
        }
        protected System.Web.HttpApplication ApplicationInstance
        {
            get
            {
                return ((System.Web.HttpApplication)(Context.ApplicationInstance));
            }
        }
        public override void Execute()
        {


 using (var e = Html.TypeContext<ExceptionDN>())
{

WriteLiteral("    <table>\r\n        <tr>\r\n            <td>\r\n                ");


           Write(Html.ValueLine(e, f => f.Environment));

WriteLiteral("\r\n                ");


           Write(Html.ValueLine(e, f => f.CreationDate));

WriteLiteral("<text>(</text>");


                                                                Write(e.Value.CreationDate.ToUserInterface().ToAgoString());

WriteLiteral("<text>)</text>\r\n                ");


           Write(Html.EntityLine(e, f => f.User));

WriteLiteral("\r\n                ");


           Write(Html.ValueLine(e, f => f.Version));

WriteLiteral("\r\n                ");


           Write(Html.ValueLine(e, f => f.ThreadId));

WriteLiteral("\r\n            </td>\r\n            <td>\r\n                ");


           Write(Html.ValueLine(e, f => f.ActionName));

WriteLiteral("\r\n                ");


           Write(Html.ValueLine(e, f => f.ControllerName));

WriteLiteral("\r\n                ");


           Write(Html.ValueLine(e, f => f.UserHostAddress));

WriteLiteral("\r\n                ");


           Write(Html.ValueLine(e, f => f.UserHostName));

WriteLiteral("\r\n                ");


           Write(Html.ValueLine(e, f => f.UserAgent));

WriteLiteral("\r\n            </td>\r\n        </tr>\r\n    </table>\r\n");


    
    
Write(Html.ValueLine(e, f => f.RequestUrl));

                                         
    
Write(Html.ValueLine(e, f => f.UrlReferer));

                                         
    

WriteLiteral("    <h3>\r\n        QueryString</h3>\r\n");



WriteLiteral("    <pre>");


    Write(e.Value.QueryString);

WriteLiteral("</pre>\r\n");


    

WriteLiteral("    <h3>\r\n        Form</h3>\r\n");



WriteLiteral("    <pre>");


    Write(e.Value.Form);

WriteLiteral("</pre>\r\n");




WriteLiteral("    <h3>\r\n        Session</h3>\r\n");



WriteLiteral("    <pre>");


    Write(e.Value.Session);

WriteLiteral("</pre>\r\n");




WriteLiteral("    <h3 style=\"color: rgb(139,0,0)\">");


                               Write(e.Value.ExceptionType);

WriteLiteral("</h3>\r\n");



WriteLiteral("    <pre>");


    Write(e.Value.ExceptionMessage);

WriteLiteral("</pre>\r\n");



WriteLiteral("    <h3>\r\n        StackTrace</h3>\r\n");



WriteLiteral("    <pre>");


    Write(e.Value.StackTrace);

WriteLiteral("</pre>\r\n");


}

        }
    }
}
