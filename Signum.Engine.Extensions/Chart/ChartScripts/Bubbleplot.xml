<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<ChartScript GroupBy="Optional">
  <Columns>
    <Column DisplayName="Color" ColumnType="Groupable" IsGroupKey="true" />
    <Column DisplayName="Horizontal Axis" ColumnType="Positionable" />
    <Column DisplayName="Vertical Axis" ColumnType="Positionable" />
    <Column DisplayName="Size" ColumnType="Magnitude" />
  </Columns>
  <Icon FileName="bubbles.png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAABQVJREFUeNrsmP1vU1UYx7+nL1u73Xbtdke3zo69sY051oFj6AAjUQwYthj9QX+QBBD8wYQoIZj4i/8AYZKYyCIiPyAxGuNw0+BbRIlDB4pjZmyOt40x2Mratevajvb2Hs+57Wo7eVlY92KyJ3nS9p7c9nO/z/d5zu0llFIs5FBhgcciYFIAt+49RhcVfMjQPOyJp85dpb93DqDnyjBkNglKC7OxuiofzzxeQuYd8KU9H9MMowGCkAaLNReyTDE44kNX859498hP9OvDO8m8lfjlPcfpkuxM5OVZYDAKUKtVSgoGAVarBSJb27zzMJ03wIwMAaJoZqrJSoaZepGUlTRnmRXw785cpnMO2Hj0NOVl5SXlvuNg8iRcmEZThj4tDe0dfXOvYM+129DpUiOKRWEi+a+CfC0lNQXdrHnmvEmoohq/KhqDiSk45f28eLC0IBvjPn8MIl41Oaomh5wITKC82DL3Cq6qtOGvE+eh0+tjvptUTY42C/dmwB9Arb0qOi/76A9tPbh4aUi5AJNRj43ry7G1fiVJuoJPrykiY55xjNx2ReHkODUjsF63BxN+PzatjQzsjz5vR5ikotpeBru9HEtyc3Hy9CUcbf6DzsqYOfH+NuJ0jmJ4yAGv14dgSEKIpX/ch1GnE+NjYzj54S4F7uCxNpotZrLG0kFi6klSGCAEWezYt6e7Z28naW3aQfica7/Qj+7LQ8ox7jle1knlePRedcCUmRWBUwBlhMJh8B7yeAPJBfSPDdT7Ow+1yI4zkNy9qGA/YhcLoKqoQ3r1Gw1pGbbWqeekpmhwJyhBo4UCGJLkGGzSu/jWJ3Ut1PELtBlFEB7dBWPlq9CaSkCHTqH7yJqWu52zZmUBXKMeBSzIyhuKpt8XQFmRJTmAAabctcM2arI9Bl1BPTTm5SBaQUltZgX0JS8iv2g5zh2wUp97oD5h3960gricbgwPj8Dnm0BgIgjv2DjcLheefbIiOYC+zqYWQSxGSs7auKMyn9rKK2VdnJq3AflWEf6Oxv8o+eWh7WTz+mXQkyBwxwv7six81bSdPLduerdlD/SgPHKWlbUkbjsJxyA5XOQY85mpDBLz593ilS12wnJ2BnWYNYQuty4BjspS9LMcU1NtsMHd34Z4Z7k7P6Ch/hblO3iozeXQLm2AacX07xen2STyfeEir4mdOfLj63Tiwn6otOnQFz8PXeEWEKa0s+0dZS1pCqqNhZC8A9CaS+NKOgWOK+29DsGcp7x3nX+PSoPfM7AXoNKJMfXVehGZgg2Oi83QiNXUVPUambGCRKyFNNp9Xzi+xmcjsayLwN74hjXVEwlwk55VM8CsRyoR6mtOTonTqnY3OIYGEbz58z3h+Nr1Wy7o7XsaIr79Gxrj0jhrRBuKn8/KrDYWQXJ1JafE6SZba+XuG6TjoJXmBkagYR2tFvJiZeXKcbjVe2/GykXl4OQNZCJcgpfDyd1JSra1N6hyNjA/Xoez6zMluTeJdSPKd/zWkOBbQwGksf57wvEL05jLkrsXC0xJ4alGRaUHbVIqWz2CPU1Qp+eAaIREOL8DnpsXYK59e3b/uN8vxNp9ZNjZQf29nyLFUsMUZX6UQ5A8V+AZ7IChcCMyV+0m8waoqLz5OLl9dj+V+r+Aq+9XqNh9oCG7GBk1b0GseZMkbQ7OJLKZkqjdh5n8O/n/PDxaaI/gjh3YqtiALD6jXgSc5/hHgAEA3YHVJnv5B90AAAAASUVORK5CYII=]]></Icon>
  <Script><![CDATA[function DrawChart(chart, data){
  
  var xRule = º.rule({
    _1 : 5,
    title : 15,
    _2 : 5, 
    labels: 40,
    _3 : 5,
    ticks: 4,
    content: '*',
    _4: 5,
  }, width);
  //xRule.debugX(chart)
  
  var yRule = º.rule({
    _1 : 5,
    content: '*',
    ticks: 4,
    _2 : 5,
    labels: 10,
    _3 : 10,
    title: 15,
    _4 : 5,
  }, height);
  //yRule.debugY(chart);
  
  
  var x = d3.scale.linear()
      .domain([0, d3.max($.map(data.rows, function (e) { return getKey(e.c1); }))])
      .range([0, xRule.size('content')]);
  
  
  var y = d3.scale.linear()
      .domain([0, d3.max($.map(data.rows, function (e) { return getKey(e.c2); }))])
      .range([0, yRule.size('content')]);
  
  
  var xTicks = x.ticks(width/50);
  
  chart.append('svg:g').attr('class', 'x-lines').attr('transform', translate(xRule.start('content'), yRule.start('content')))
    .enterData(xTicks, 'line', 'y-lines')
    .attr('x1', function(t) { return x(t); })
    .attr('x2', function(t) { return x(t); })
    .attr('y1', yRule.size('content'))
  	.style('stroke', 'LightGray');
  
  chart.append('svg:g').attr('class', 'x-tick').attr('transform', translate(xRule.start('content'), yRule.start('ticks')))
    .enterData(xTicks, 'line', 'x-tick')
    .attr('x1', x)
    .attr('x2', x)
    .attr('y2', yRule.size('ticks'))
    .style('stroke', 'Black');
  
  chart.append('svg:g').attr('class', 'x-label').attr('transform', translate(xRule.start('content'), yRule.end('labels')))
    .enterData(xTicks, 'text', 'x-label')
    .attr('x', x)
    .attr('text-anchor', 'middle')
    .text(String);
  
  chart.append('svg:g').attr('class', 'x-title').attr('transform', translate(xRule.middle('content'), yRule.middle('title')))
    .append('svg:text').attr('class', 'x-title')
    .attr('text-anchor', 'middle')
    .attr('dominant-baseline', 'middle')
  	.text(data.columns.c1.title);
  
  
  var yTicks = y.ticks(height / 50);
  
  chart.append('svg:g').attr('class', 'y-lines').attr('transform', translate(xRule.start('content'), yRule.end('content')))
    .enterData(yTicks, 'line', 'y-lines')
    .attr('x2', xRule.size('content'))
    .attr('y1', function(t) { return -y(t); })
    .attr('y2', function(t) { return -y(t); })
    .style('stroke', 'LightGray');
  
  chart.append('svg:g').attr('class', 'y-tick').attr('transform', translate(xRule.start('ticks'), yRule.end('content')))
    .enterData(yTicks, 'line', 'y-tick')
    .attr('x2', xRule.size('ticks'))
    .attr('y1', function(t) { return -y(t); })
    .attr('y2', function(t) { return -y(t); })
    .style('stroke', 'Black');
  
  chart.append('svg:g').attr('class', 'y-label').attr('transform', translate(xRule.end('labels'), yRule.end('content')))
    .enterData(yTicks, 'text', 'y-label')
    .attr('y', function(t) { return -y(t); })
    .attr('dominant-baseline', 'middle')
    .attr('text-anchor', 'end')
    .text(String);
  
  chart.append('svg:g').attr('class', 'y-title').attr('transform', translate(xRule.middle('title'), yRule.middle('content')) + rotate(270))
    .append('svg:text').attr('class', 'y-title')
    .attr('text-anchor', 'middle')
    .attr('dominant-baseline', 'middle')
    .text(data.columns.c2.title);
  
  var color = d3.scale.category20().domain([0, $.map(data.rows, function(v) { return getKey(v.c0); })]);
  
   var sizeScale = d3.scale.linear()
      .domain([0, _.reduce(data.rows, function(memo, p){ return memo + p.c3; }, 0) * 3])
      .range([0, xRule.size('content') * yRule.size('content')]);
  
  //PAINT GRAPH
  chart.enterData(_.sortBy(data.rows, function (p){ return -getKey(p.c3);})  , 'g', 'shape-serie').attr('transform', translate(xRule.start('content'), yRule.end('content')))
    .append('svg:circle').attr('class', 'shape')
    .attr('stroke', function(p) { return getColor(p.c0, color); })
    .attr('stroke-width', 3)
    .attr('fill', function(p) { return getColor(p.c0, color); })
    .attr('fill-opacity', .5)
    .attr('shape-rendering', 'initial')
    .attr('r', function(p) { return Math.sqrt(sizeScale(getKey(p.c3))/Math.PI); })
    .attr('cx', function(p) { return x(getKey(p.c1)); })
    .attr('cy', function(p) { return -y(getKey(p.c2)); })
    .attr('data-click', function(p) { return getClickKeys(p, data.columns); })
    .append('svg:title')
    .text(function(p) { return '(' + getLabel(p.c1) + ', ' + getLabel(p.c2) + ') ' + getLabel(p.c0) + ': ' + getLabel(p.c3); })

  chart.append('svg:g').attr('class', 'x-axis').attr('transform', translate(xRule.start('content'), yRule.end('content')))
     .append('svg:line')
     .attr('class', 'x-axis')
     .attr('x2', xRule.size('content'))
     .style('stroke', 'Black');
  
  chart.append('svg:g').attr('class', 'y-axis').attr('transform', translate(xRule.start('content'), yRule.start('content')))
    .append('svg:line')
    .attr('class', 'y-axis')
    .attr('y2', yRule.size('content'))
    .style('stroke', 'Black');

}
]]></Script>
</ChartScript>