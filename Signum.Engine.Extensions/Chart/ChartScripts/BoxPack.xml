<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<ChartScript GroupBy="Optional">
  <Columns>
    <Column DisplayName="Color" ColumnType="Groupable" IsGroupKey="true" />
    <Column DisplayName="Size" ColumnType="Magnitude" />
  </Columns>
  <Script><![CDATA[function DrawChart(chart, data){
  var format = d3.format(",d");
  var fill = d3.scale.category20c($.map(data.rows, function(v) { return getKey(v.c0); }));
  
  var format = d3.format(",d");
  
  var size = º.scaleFor(data.columns.c1, data.rows.map(function(r){return getKey(r.c1);}), 0, 1);
  
  var bubble = d3.layout.treemap()
     .size([width, height])
      .padding(2).value(function(r){return size(getKey(r.c1));});
  
  var tree = {
    children: data.rows
  }  
  
  var node = chart.selectAll("g.node")
      .data(bubble.nodes(tree).filter(function(d) { return !d.children; }))
    .enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

  node.append("title")
      .text(function(d) { return getLabel(d.c0) + ": " + format(d.c1); });

  node.append("rect")
      .attr('shape-rendering', 'initial')
      .attr("width", function(d) { return Math.max(0, d.dx - 1); })
      .attr("height", function(d) { return Math.max(0, d.dy - 1); })
      .style("fill", function(d) { return fill(getKey(d.c0)); })
      .attr('data-click', function(p) { return getClickKeys(p, data.columns); })
      .append('svg:title')
      .text(function(d) { return  getLabel(d.c0) + ': ' + getLabel(d.c1);});

  node.append("text")
      .attr("text-anchor", "middle")
      .attr('dominant-baseline', 'middle')
      .attr("dx",function(d) { return d.dx/2; })
      .attr("dy",function(d) { return d.dy/2; })
      .attr('data-click', function(p) { return getClickKeys(p, data.columns); })
      .text(function(d) { return getLabel(d.c0).substring(0,d.dy/6); });
  
}]]></Script>
</ChartScript>